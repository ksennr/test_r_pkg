usethis::use_test()
##### 4. Create a package for churn prediction (45 min)
get_cust_id <- function(data, customer_id) {
if (!customer_id %in% data$CustomerId) {
stop("Data does not contain a your provided 'CustomerId'")
} else {
return(data[CustomerId == customer_id,churn_rate_pred])
}
}
get_cust_id(data_merged, 15653251)
library(data.table)
##### 1. Setup R and read in data (5 min)
path <- "C:\\Users\\kilia\\Documents\\R Seminar\\Day 5\\"
file1 <- "data_customer.csv"
file2 <- "data_personal.csv"
data_customer <- fread(paste0(path, file1))
data_personal <- fread(paste0(path, file2))
names(data_customer)
names(data_personal)
##### 2. Prepare data for analysis (5 min)
data_merged <- merge(data_customer, data_personal, by.x = "CustomerId", by.y = "CustomerId", all=TRUE)
data_merged$Exited <- as.factor(data_merged$Exited)
data_merged$Gender <- as.factor(data_merged$Gender)
summary(data_merged)
str(data_merged)
##### 3. Predict churn probability (20 min)
glm_fit <- glm(
formula = Exited ~ CreditScore + Gender + Age + Tenure + Balance + NumOfProducts + HasCrCard + IsActiveMember + EstimatedSalary,
family = "binomial",
data = data_merged
)
data_merged$churn_rate_pred <- predict(glm_fit, data_merged, type = "response")
# Customer with the highest and lowest probabilies:
setorder(data_merged, -churn_rate_pred)[1:10,]
# Average churn probability for men and women
data_merged[,mean(churn_rate_pred), by="Gender"]
##### 4. Create a package for churn prediction (45 min)
get_cust_id <- function(data, customer_id) {
if (!customer_id %in% data$CustomerId) {
stop("Data does not contain a your provided 'CustomerId'")
} else {
return(data[CustomerId == customer_id,churn_rate_pred])
}
}
get_cust_id(data_merged, 15653251)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(getChurnProb)
library(getChurnProb)
devtools::test()
setup(function() {
path <- "C:\\Users\\kilia\\Documents\\R Seminar\\Day 5\\"
file1 <- "data_customer.csv"
file2 <- "data_personal.csv"
data_customer <- fread(paste0(path, file1))
data_personal <- fread(paste0(path, file2))
data_merged <- merge(data_customer, data_personal, by.x = "CustomerId", by.y = "CustomerId", all=TRUE)
data_merged$Exited <- as.factor(data_merged$Exited)
data_merged$Gender <- as.factor(data_merged$Gender)
glm_fit <- glm(
formula = Exited ~ CreditScore + Gender + Age + Tenure + Balance + NumOfProducts + HasCrCard + IsActiveMember + EstimatedSalary,
family = "binomial",
data = data_merged
)
data_merged$churn_rate_pred <- predict(glm_fit, data_merged, type = "response")
data_merged
})
devtools::test()
devtools::test()
return(data_merged)
devtools::test()
devtools::test()
devtools::test()
library(getChurnProb)
devtools::test()
path <- "C:\\Users\\kilia\\Documents\\R Seminar\\Day 5\\"
file1 <- "data_customer.csv"
file2 <- "data_personal.csv"
data_customer <- fread(paste0(path, file1))
data_personal <- fread(paste0(path, file2))
data_merged <- merge(data_customer, data_personal, by.x = "CustomerId", by.y = "CustomerId", all=TRUE)
data_merged$Exited <- as.factor(data_merged$Exited)
data_merged$Gender <- as.factor(data_merged$Gender)
glm_fit <- glm(
formula = Exited ~ CreditScore + Gender + Age + Tenure + Balance + NumOfProducts + HasCrCard + IsActiveMember + EstimatedSalary,
family = "binomial",
data = data_merged
)
data_merged$churn_rate_pred <- predict(glm_fit, data_merged, type = "response")
getChurnProb::get_cust_id(data_merged, 372)
library(getChurnProb)
library(getChurnProb)
